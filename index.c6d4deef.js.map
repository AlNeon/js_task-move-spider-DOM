{"mappings":"ACEA,IAAM,EAAS,SAAS,aAAa,CAAC,WAChC,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAa,iBAAiB,GAC9B,EAAiB,SAAS,EAAW,eAAe,EACpD,EAAgB,SAAS,EAAW,cAAc,EAExD,SAAS,EAAY,CAAK,CAAE,CAAO,CAAE,CAAW,EAC9C,OAAO,KAAK,GAAG,CAAC,EAAG,KAAK,GAAG,CAAC,EAAO,EAAU,GAC/C,CAEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EAGE,GAFc,EAAE,MAAM,CAAC,OAAO,CAAC,UAM/B,IAAM,EAAc,EAAO,WAAW,CAChC,EAAe,EAAO,YAAY,CAElC,EAAW,EAAK,qBAAqB,GACrC,EAAY,EAAK,WAAW,CAC5B,EAAa,EAAK,YAAY,CAE9B,EAAW,EACf,EAAE,OAAO,CAAG,EAAS,IAAI,CAAG,EAAc,EAAI,EAC9C,EACA,GAEI,EAAW,EACf,EAAE,OAAO,CAAG,EAAS,GAAG,CAAG,EAAe,EAAI,EAC9C,EACA,EAGF,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,EAAW,KAC9B,EAAO,KAAK,CAAC,IAAI,CAAG,EAAW,KACjC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar spider = document.querySelector(\".spider\");\nvar wall = document.querySelector(\".wall\");\nvar wallStyles = getComputedStyle(wall);\nvar wallBorderLeft = parseInt(wallStyles.borderLeftWidth);\nvar wallBorderTop = parseInt(wallStyles.borderTopWidth);\nfunction limitCoords(coord, maxSize, elementSize) {\n    return Math.max(0, Math.min(coord, maxSize - elementSize));\n}\ndocument.addEventListener(\"click\", function(e) {\n    var point = e.target.closest(\".wall\");\n    if (!point) return;\n    var spiderWidth = spider.offsetWidth;\n    var spiderHeight = spider.offsetHeight;\n    var wallRect = wall.getBoundingClientRect();\n    var wallWidth = wall.clientWidth;\n    var wallHeight = wall.clientHeight;\n    var currentX = limitCoords(e.clientX - wallRect.left - spiderWidth / 2 - wallBorderLeft, wallWidth, spiderWidth);\n    var currentY = limitCoords(e.clientY - wallRect.top - spiderHeight / 2 - wallBorderTop, wallHeight, spiderHeight);\n    spider.style.top = currentY + \"px\";\n    spider.style.left = currentX + \"px\";\n});\n\n//# sourceMappingURL=index.c6d4deef.js.map\n","'use strict';\n\nconst spider = document.querySelector('.spider');\nconst wall = document.querySelector('.wall');\nconst wallStyles = getComputedStyle(wall);\nconst wallBorderLeft = parseInt(wallStyles.borderLeftWidth);\nconst wallBorderTop = parseInt(wallStyles.borderTopWidth);\n\nfunction limitCoords(coord, maxSize, elementSize) {\n  return Math.max(0, Math.min(coord, maxSize - elementSize));\n}\n\ndocument.addEventListener('click', (e) => {\n  const point = e.target.closest('.wall');\n\n  if (!point) {\n    return;\n  }\n\n  const spiderWidth = spider.offsetWidth;\n  const spiderHeight = spider.offsetHeight;\n\n  const wallRect = wall.getBoundingClientRect();\n  const wallWidth = wall.clientWidth;\n  const wallHeight = wall.clientHeight;\n\n  const currentX = limitCoords(\n    e.clientX - wallRect.left - spiderWidth / 2 - wallBorderLeft,\n    wallWidth,\n    spiderWidth,\n  );\n  const currentY = limitCoords(\n    e.clientY - wallRect.top - spiderHeight / 2 - wallBorderTop,\n    wallHeight,\n    spiderHeight,\n  );\n\n  spider.style.top = currentY + 'px';\n  spider.style.left = currentX + 'px';\n});\n"],"names":["spider","document","querySelector","wall","wallStyles","getComputedStyle","wallBorderLeft","parseInt","borderLeftWidth","wallBorderTop","borderTopWidth","limitCoords","coord","maxSize","elementSize","Math","max","min","addEventListener","e","target","closest","spiderWidth","offsetWidth","spiderHeight","offsetHeight","wallRect","getBoundingClientRect","wallWidth","clientWidth","wallHeight","clientHeight","currentX","clientX","left","currentY","clientY","top","style"],"version":3,"file":"index.c6d4deef.js.map"}